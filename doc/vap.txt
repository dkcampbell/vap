*vap.txt* A plugin for project configuration

Author:  Dan Campbell <http://compiledworks.com>
License: MIT

This plugin is only available when Vim is compiled with Python support.
VAP will only work with compatibility mode disabled.

INTRODUCTION                                           *VAP*

VAP, or Vim Auto Projects, is a poorly named tool for managing configurations
of C/C++ projects using the CMake build system. VAP, once configured, will
automatically enable Vim to work with out of source builds, provide code
completion information to the YouCompleteMe plugin, and launch builds of a
project asynchronously using the vim-dispatch plugin.

VAP is pronoucned like "zap."

CONFIGURATION                                          *vap-config*

COMMANDS                                               *vap-commands*

                                                       *vap-:CMakeGenerate*
:CMakeGenerate         Dispatch CMake asynchronously using the project
                       configuration settings. This will create an out of
                       source build using configuration values set in the vap
                       configuration file.

                                                       *vap-:Edit*
:Edit                  Load the VAP configuration file into a buffer for easy
                       editing.

                                                       *vap-:Reload*
:Reload                Reload VAP configuration file without restarting Vim.

                                                       *vap-:Run*
:Run                   Dispatch the "run" command from the VAP configuration
                       file.

                                                       *vap-:Debug*
:Debug                 Dispatch the "debug_run" command from the VAP
                       configuration file.

                                                       *vap-:Target*
:Target [arguments]    Switch to a different build target defined in the VAP
                       configuration file.

CUSTOMIZING                                            *vap-customizing*

ISSUES                                                 *vap-issues*

VAP was designed to be a solution to my daily annoyances with Vim. As a result
VAP is very much designed for my development workflow. While it may be useful
for other Vim users who work with several CMake projects it should be known
that VAP was not designed to be useful for a large userbase.

VAP has not been tested on Windows, and I doubt it will work by default.

VAP decides which build configuration to use based on the working directory
Vim is started in. This works well for my development style where I enter the
root directory of the project and type "vim ." to browse the project files in
Vim. I don't use the gVim program much, but I'm guessing this could likely
cause GUI versions of vim to not work well with this program.

VAP will not recursively match the build configuration from nested
directories. This is on purpose, so that I can have different configuration
for CMake subprojects, which I may want to use different settings for.

VAP lacks a lot of error checking for things such as determining if the dispatch
plugin is installed before using it. It was too much effort to add a solution
to a problem I don't have. You may see a lot of red if you don't have the
proper depdencies.

Vap doesn't attempt to prefix any of its commands, for example :Run instead
of :VapRun. I use this plugin daily on multiple computers, it just wasn't
worth the extra typing to try to avoid conflicts with other plugins.

 vim:tw=78:ts=8:ft=help:norl:
